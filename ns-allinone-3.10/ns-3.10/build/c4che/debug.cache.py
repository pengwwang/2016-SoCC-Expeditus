AR = '/usr/bin/ar'
ARFLAGS = 'rcs'
CC = ['/usr/bin/gcc']
CCDEFINES = ['_DEBUG', 'NS3_ASSERT_ENABLE', 'NS3_LOG_ENABLE', 'NETWORK_SIMULATION_CRADLE']
CCDEFINES_ST = '-D%s'
CCFLAGS = ['-O0', '-ggdb', '-g3', '-Wall', '-Werror', '-Wall', '-Wno-error=deprecated-declarations', '-fstrict-aliasing', '-Wstrict-aliasing']
CCFLAGS_DEBUG = ['-g']
CCFLAGS_MACBUNDLE = ['-fPIC']
CCFLAGS_PTHREAD = '-pthread'
CCFLAGS_RELEASE = ['-O2']
CCLNK_SRC_F = ''
CCLNK_TGT_F = ['-o', '']
CC_NAME = 'gcc'
CC_SRC_F = ''
CC_TGT_F = ['-c', '-o', '']
CC_VERSION = ('4', '4', '7')
COMPILER_CC = 'gcc'
COMPILER_CXX = 'g++'
CPP = '/usr/bin/cpp'
CPPPATH_ST = '-I%s'
CXX = ['g++-4.4']
CXXDEFINES = ['NS3_ASSERT_ENABLE', 'NS3_LOG_ENABLE', 'NETWORK_SIMULATION_CRADLE']
CXXDEFINES_ST = '-D%s'
CXXFLAGS = ['-Wall']
CXXFLAGS_DEBUG = ['-g']
CXXFLAGS_PTHREAD = '-pthread'
CXXFLAGS_RELEASE = ['-O2']
CXXLNK_SRC_F = ''
CXXLNK_TGT_F = ['-o', '']
CXX_NAME = 'gcc'
CXX_SRC_F = ''
CXX_TGT_F = ['-c', '-o', '']
DEST_BINFMT = 'elf'
DEST_CPU = 'x86_64'
DEST_OS = 'linux'
DOXYGEN = ''
ENABLE_EMU = True
ENABLE_EXAMPLES = True
ENABLE_GSL = False
ENABLE_GTK_CONFIG_STORE = False
ENABLE_LIBXML2 = False
ENABLE_NSC = False
ENABLE_PYTHON_BINDINGS = False
ENABLE_PYTHON_PCH = False
ENABLE_REAL_TIME = True
ENABLE_STATIC_NS3 = False
ENABLE_SUDO = False
ENABLE_TAP = True
ENABLE_THREADING = True
FULLSTATIC_MARKER = '-static'
HAVE_GETENV = 1
HAVE_IF_TUN_H = 1
HAVE_INTTYPES_H = 1
HAVE_NETINET_IN_H = 1
HAVE_PACKET_H = 1
HAVE_PTHREAD_H = 1
HAVE_SIGNAL_H = 1
HAVE_STDINT_H = 1
HAVE_STDLIB_H = 1
HAVE_SYS_INT_TYPES_H = ()
HAVE_SYS_SOCKET_H = 1
HAVE_UINT128_T = ()
HAVE___UINT128_T = 1
LIBPATH_ST = '-L%s'
LIB_DL = ['dl']
LIB_RT = ['rt']
LIB_ST = '-l%s'
LINKFLAGS_MACBUNDLE = ['-bundle', '-undefined', 'dynamic_lookup']
LINKFLAGS_PTHREAD = '-pthread'
LINK_CC = ['/usr/bin/gcc']
LINK_CXX = ['g++-4.4']
MPI = ''
NS3_ACTIVE_VARIANT = 'debug'
NS3_BUILDDIR = '/proj/expeditus/ns-allinone-3.10/ns-3.10/build'
NS3_EXECUTABLE_PATH = ['/proj/expeditus/ns-allinone-3.10/ns-3.10/build/debug/src/devices/emu', '/proj/expeditus/ns-allinone-3.10/ns-3.10/build/debug/src/devices/tap-bridge']
NS3_MODULES = ['ns3-core', 'ns3-common', 'ns3-simulator', 'ns3-contrib', 'ns3-node', 'ns3-internet-stack', 'ns3-point-to-point', 'ns3-csma', 'ns3-emu', 'ns3-bridge', 'ns3-tap-bridge', 'ns3-virtual-net-device', 'ns3-onoff', 'ns3-packet-sink', 'ns3-udp-echo', 'ns3-bulk-send', 'ns3-nix-vector-routing', 'ns3-olsr', 'ns3-global-routing', 'ns3-static-routing', 'ns3-list-routing', 'ns3-hash-routing', 'ns3-aodv', 'ns3-dsdv', 'ns3-mobility', 'ns3-wifi', 'ns3-helper', 'ns3-stats', 'ns3-v4ping', 'ns3-uan', 'ns3-spectrum', 'ns3-mesh', 'ns3-dot11s', 'ns3-flame', 'ns3-ping6', 'ns3-radvd', 'ns3-test', 'ns3-ns3tcp', 'ns3-nsctcp', 'ns3-ns3wifi', 'ns3-flow-monitor', 'ns3-udp-client-server', 'ns3-wimax', 'ns3-lte', 'ns3-mpi', 'ns3-topology-read', 'ns3-energy', 'ns3-visualizer']
NS3_MODULE_PATH = ['/usr/lib/gcc/x86_64-linux-gnu/4.4.7', '/proj/expeditus/ns-allinone-3.10/nsc-0.5.2/linux-2.6.18', '/proj/expeditus/ns-allinone-3.10/nsc-0.5.2/linux-2.6.26', '/proj/expeditus/ns-allinone-3.10/ns-3.10/build/debug']
NS3_OPTIONAL_FEATURES = [('Threading', 'Threading Primitives', True, '<pthread.h> include not detected'), ('RealTime', 'Real Time Simulator', True, 'threading not enabled'), ('EmuNetDevice', 'Emulated Net Device', True, '<netpacket/packet.h> include not detected'), ('TapBridge', 'Tap Bridge', True, '<linux/if_tun.h> include not detected'), ('GtkConfigStore', 'GtkConfigStore', False, "library 'gtk+-2.0 >= 2.12' not found"), ('XmlIo', 'XmlIo', False, "library 'libxml-2.0 >= 2.7' not found"), ('SqliteDataOutput', 'SQlite stats data output', False, "library 'sqlite3' not found"), ('nsc', 'Network Simulation Cradle', True, ''), ('python', 'Python Bindings', False, 'disabled by user request'), ('mpi', 'MPI Support', False, 'option --enable-mpi not selected'), ('ENABLE_SUDO', 'Use sudo to set suid bit', False, 'option --enable-sudo not selected'), ('ENABLE_EXAMPLES', 'Build examples and samples', True, 'defaults to enabled'), ('static', 'Static build', False, 'option --enable-static not selected'), ('GSL', 'GNU Scientific Library (GSL)', False, 'GSL not found')]
NSC_ENABLED = True
PKG_CONFIG = ''
PLATFORM = 'linux2'
PREFIX = '/usr/local'
RANLIB = '/usr/bin/ranlib'
RPATH_ST = '-Wl,-rpath,%s'
SHLIB_MARKER = '-Wl,-Bdynamic'
SONAME_ST = '-Wl,-h,%s'
SQLITE_STATS = False
STATICLIBPATH_ST = '-L%s'
STATICLIB_MARKER = '-Wl,-Bstatic'
STATICLIB_ST = '-l%s'
SUDO = '/usr/bin/sudo'
USE_HIGH_PRECISION_128 = 1
VALGRIND = '/usr/bin/valgrind'
WITH_NSC = '/proj/expeditus/ns-allinone-3.10/nsc-0.5.2'
WL_SONAME_SUPPORTED = True
_VARIANT_ = 'debug'
cfg_files = ['ns3/core-config.h', 'ns3/simulator-config.h', 'ns3/contrib-config.h', 'ns3/net-anim-config.h']
defines = {'HAVE___UINT128_T': 1, 'HAVE_SYS_SOCKET_H': 1, 'HAVE_SIGNAL_H': 1, 'HAVE_NETINET_IN_H': 1, 'HAVE_GETENV': 1, 'HAVE_IF_TUN_H': 1, 'HAVE_INTTYPES_H': 1, 'HAVE_UINT128_T': (), 'HAVE_STDLIB_H': 1, 'HAVE_PTHREAD_H': 1, 'HAVE_STDINT_H': 1, 'HAVE_SYS_INT_TYPES_H': (), 'HAVE_PACKET_H': 1, 'USE_HIGH_PRECISION_128': 1}
macbundle_PATTERN = '%s.bundle'
program_PATTERN = '%s'
shlib_CCFLAGS = ['-fPIC', '-DPIC']
shlib_CXXFLAGS = ['-fPIC', '-DPIC']
shlib_LINKFLAGS = ['-shared']
shlib_PATTERN = 'lib%s.so'
staticlib_LINKFLAGS = ['-Wl,-Bstatic']
staticlib_PATTERN = 'lib%s.a'
